(self.webpackChunkeditor_demo=self.webpackChunkeditor_demo||[]).push([[121],{121:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var o=n(2978),s=n(7179);const a=(()=>{var e;class t{constructor(){this.component1=Promise.all([n.e(1093),n.e(2076),n.e(1837)]).then(n.bind(n,1837)),this.example1={TypeScript:n.e(2576).then(n.t.bind(n,2576,17)),HTML:n.e(952).then(n.t.bind(n,952,17))}}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=o.VBU({type:e,selectors:[["ng-component"]],standalone:!0,features:[o.aNF],decls:2,vars:2,consts:[["id","anchors","description","The Focus extension adds a CSS class to focused nodes. By default it adds .has-focus, but you can change that. Note that it’s only a class, the styling is totally up to you. The usage example below has some CSS for that class.","heading","Focus",3,"component","content"]],template:function(e,t){1&e&&(o.j41(0,"tui-doc-page"),o.nrm(1,"tui-doc-example",0),o.k0s()),2&e&&(o.R7$(1),o.Y8G("component",t.component1)("content",t.example1))},dependencies:[s.FS,s.e3],encapsulation:2,changeDetection:0}),t})()}}]);