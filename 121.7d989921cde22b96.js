(self.webpackChunkeditor_demo=self.webpackChunkeditor_demo||[]).push([[121],{121:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var o=n(613),s=n(2978),a=n(8003);const c=(()=>{var e;class t{constructor(){this.component1=n.e(1837).then(n.bind(n,1837)),this.example1={TypeScript:n.e(2576).then(n.t.bind(n,2576,17)),HTML:n.e(952).then(n.t.bind(n,952,17))}}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=s.VBU({type:e,selectors:[["ng-component"]],standalone:!0,features:[s.Jv_([{provide:o.TUI_EDITOR_EXTENSIONS,useValue:o.TUI_EDITOR_DEFAULT_EXTENSIONS}]),s.aNF],decls:2,vars:2,consts:[["header","Editor","type","components"],["id","anchors","description","The Focus extension adds a CSS class to focused nodes. By default it adds .has-focus, but you can change that. Note that it’s only a class, the styling is totally up to you. The usage example below has some CSS for that class.","heading","Focus",3,"component","content"]],template:function(e,t){1&e&&(s.j41(0,"tui-doc-page",0),s.nrm(1,"tui-doc-example",1),s.k0s()),2&e&&(s.R7$(1),s.Y8G("component",t.component1)("content",t.example1))},dependencies:[a.FS,a.e3],encapsulation:2,changeDetection:0}),t})()}}]);