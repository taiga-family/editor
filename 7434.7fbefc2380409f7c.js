(self.webpackChunkeditor_demo=self.webpackChunkeditor_demo||[]).push([[7434],{5053:t=>{t.exports="import {ChangeDetectionStrategy, Component, ViewChild} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {TUI_EDITOR_EXTENSIONS, TuiEditor, TuiEditorTool} from '@taiga-ui/editor';\nimport {TuiProgress} from '@taiga-ui/kit';\nimport {type CharacterCountStorage} from '@tiptap/extension-character-count';\n\nconst limit = 280;\n\n@Component({\n    standalone: true,\n    imports: [ReactiveFormsModule, TuiEditor, TuiProgress],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_EDITOR_EXTENSIONS,\n            useValue: [\n                import('@taiga-ui/editor').then(({TuiStarterKit}) => TuiStarterKit),\n                import('@tiptap/extension-character-count').then(({CharacterCount}) =>\n                    CharacterCount.configure({\n                        limit,\n                    }),\n                ),\n            ],\n        },\n    ],\n})\nexport default class Example {\n    @ViewChild(TuiEditor)\n    protected readonly wysiwyg?: TuiEditor;\n\n    protected readonly builtInTools = [TuiEditorTool.Undo];\n\n    protected limit = limit;\n\n    protected control = new FormControl(`\n        <p>Hello world</p>\n    `);\n\n    protected get characterCount(): CharacterCountStorage | null {\n        return this.wysiwyg?.editor?.getOriginTiptapEditor()?.storage.characterCount;\n    }\n\n    protected get percentage(): number {\n        return this.wysiwyg\n            ? Math.round((100 / this.limit) * (this.characterCount?.characters() ?? 0))\n            : 0;\n    }\n}\n"}}]);