(self.webpackChunkeditor_demo=self.webpackChunkeditor_demo||[]).push([[913],{913:(t,e,o)=>{o.r(e),o.d(e,{CharacterCount:()=>s,default:()=>s});var n=o(6426),r=o(3829);const s=n.Extension.create({name:"characterCount",addOptions:()=>({limit:null,mode:"textSize",textCounter:t=>t.length,wordCounter:t=>t.split(" ").filter(t=>""!==t).length}),addStorage:()=>({characters:()=>0,words:()=>0}),onBeforeCreate(){this.storage.characters=t=>{const e=(null==t?void 0:t.node)||this.editor.state.doc;if("textSize"===((null==t?void 0:t.mode)||this.options.mode)){const t=e.textBetween(0,e.content.size,void 0," ");return this.options.textCounter(t)}return e.nodeSize},this.storage.words=t=>{const e=(null==t?void 0:t.node)||this.editor.state.doc,o=e.textBetween(0,e.content.size," "," ");return this.options.wordCounter(o)}},addProseMirrorPlugins(){let t=!1;return[new r.k_({key:new r.hs("characterCount"),appendTransaction:(e,o,n)=>{if(t)return;const r=this.options.limit;if(null==r||0===r)return void(t=!0);const s=this.storage.characters({node:n.doc});if(s>r){const e=0,o=s-r;console.warn(`[CharacterCount] Initial content exceeded limit of ${r} characters. Content was automatically trimmed.`);const i=n.tr.deleteRange(e,o);return t=!0,i}t=!0},filterTransaction:(t,e)=>{const o=this.options.limit;if(!t.docChanged||0===o||null==o)return!0;const n=this.storage.characters({node:e.doc}),r=this.storage.characters({node:t.doc});if(r<=o)return!0;if(n>o&&r>o&&r<=n)return!0;if(n>o&&r>o&&r>n)return!1;if(!t.getMeta("paste"))return!1;const s=t.selection.$head.pos,i=s-(r-o),a=s;return t.deleteRange(i,a),!(this.storage.characters({node:t.doc})>o)}})]}})}}]);